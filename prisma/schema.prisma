// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

model Donor {
  id        String     @id @default(uuid())
  name      String
  email     String?    
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  donations Donation[]
  @@unique ([name, email])
}

// transaction type model with id and name
model TransactionType {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  Donation  Donation[]
}

// donation reason model with id and name relation to donation
model DonationReason {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  Donation  Donation[]
}

model Donation {
  id        Int             @id @default(autoincrement())
  amount    Float
  transactionType      TransactionType @relation(fields: [transactionTypeId], references: [id])
  transactionTypeId    Int             @map("typeId")
  reason    DonationReason  @relation(fields: [reasonId], references: [id])
  reasonId  Int             @map("reasonId")
  createdAt DateTime        @default(now())
  updatedAt DateTime?       @updatedAt
  donor     Donor?          @relation(fields: [donorId], references: [id])
  donorId    String?         @map("userId")
  deposit   Deposit?        @relation(fields: [depositId], references: [id])
  depositId String?         @map("depositId")
}

model Deposit {
  id        String     @id @default(uuid())
  donations Donation[]
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
}
